{
  "version": 3,
  "sources": ["../../../../../../node_modules/@astrouxds/astro-web-components/dist/esm/rux-icon-ondemand-video.entry.js"],
  "sourcesContent": ["import { r as registerInstance, h } from './index-416188d1.js';\nconst svgIcon = '<svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21 3H3C1.9 3 1 3.9 1 5V17C1 18.1 1.9 19 3 19H8V20C8 20.55 8.45 21 9 21H15C15.55 21 16 20.55 16 20V19H21C22.1 19 22.99 18.1 22.99 17L23 5C23 3.89 22.1 3 21 3ZM20 17H4C3.45 17 3 16.55 3 16V6C3 5.45 3.45 5 4 5H20C20.55 5 21 5.45 21 6V16C21 16.55 20.55 17 20 17ZM10.5 14.15L14.48 11.87C15.15 11.48 15.15 10.52 14.48 10.13L10.5 7.85C9.83 7.47 9 7.95 9 8.72V13.28C9 14.04 9.83 14.53 10.5 14.15Z\" fill=\"currentColor\"/></svg>';\nconst RuxIconOndemandVideo = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.size = 'auto';\n  }\n  get iconSize() {\n    const sizes = {\n      'extra-small': '1rem',\n      small: '2rem',\n      normal: '3rem',\n      large: '4rem'\n    };\n    if (sizes[this.size]) {\n      return sizes[this.size];\n    } else {\n      return this.size;\n    }\n  }\n  render() {\n    const style = {\n      height: this.iconSize,\n      width: this.iconSize\n    };\n    return h(\"div\", {\n      style: style,\n      innerHTML: svgIcon\n    });\n  }\n};\nexport { RuxIconOndemandVideo as rux_icon_ondemand_video };"],
  "mappings": ";;;;;;;AACA,IAAM,UAAU;AAChB,IAAM,uBAAuB,MAAM;AAAA,EACjC,YAAY,SAAS;AACnB,qBAAiB,MAAM,OAAO;AAC9B,SAAK,OAAO;AAAA,EACd;AAAA,EACA,IAAI,WAAW;AACb,UAAM,QAAQ;AAAA,MACZ,eAAe;AAAA,MACf,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AACA,QAAI,MAAM,KAAK,IAAI,GAAG;AACpB,aAAO,MAAM,KAAK,IAAI;AAAA,IACxB,OAAO;AACL,aAAO,KAAK;AAAA,IACd;AAAA,EACF;AAAA,EACA,SAAS;AACP,UAAM,QAAQ;AAAA,MACZ,QAAQ,KAAK;AAAA,MACb,OAAO,KAAK;AAAA,IACd;AACA,WAAO,EAAE,OAAO;AAAA,MACd;AAAA,MACA,WAAW;AAAA,IACb,CAAC;AAAA,EACH;AACF;",
  "names": []
}
