{
  "version": 3,
  "sources": ["../../../../../../node_modules/@astrouxds/astro-web-components/dist/esm/rux-icon-keyboard-tab.entry.js"],
  "sourcesContent": ["import { r as registerInstance, h } from './index-416188d1.js';\nconst svgIcon = '<svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22 18C21.45 18 21 17.55 21 17V7C21 6.45 21.45 6 22 6C22.55 6 23 6.45 23 7V17C23 17.55 22.55 18 22 18ZM16.17 11L13.29 8.12C12.9 7.73 12.91 7.09 13.29 6.7C13.68 6.31 14.31 6.31 14.7 6.7L19.29 11.29C19.68 11.68 19.68 12.31 19.29 12.7L14.7 17.29C14.31 17.68 13.68 17.68 13.29 17.29C12.9 16.9 12.9 16.27 13.29 15.88L16.17 13H3C2.45 13 2 12.55 2 12C2 11.45 2.45 11 3 11H16.17Z\" fill=\"currentColor\"/></svg>';\nconst RuxIconKeyboardTab = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.size = 'auto';\n  }\n  get iconSize() {\n    const sizes = {\n      'extra-small': '1rem',\n      small: '2rem',\n      normal: '3rem',\n      large: '4rem'\n    };\n    if (sizes[this.size]) {\n      return sizes[this.size];\n    } else {\n      return this.size;\n    }\n  }\n  render() {\n    const style = {\n      height: this.iconSize,\n      width: this.iconSize\n    };\n    return h(\"div\", {\n      style: style,\n      innerHTML: svgIcon\n    });\n  }\n};\nexport { RuxIconKeyboardTab as rux_icon_keyboard_tab };"],
  "mappings": ";;;;;;;AACA,IAAM,UAAU;AAChB,IAAM,qBAAqB,MAAM;AAAA,EAC/B,YAAY,SAAS;AACnB,qBAAiB,MAAM,OAAO;AAC9B,SAAK,OAAO;AAAA,EACd;AAAA,EACA,IAAI,WAAW;AACb,UAAM,QAAQ;AAAA,MACZ,eAAe;AAAA,MACf,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AACA,QAAI,MAAM,KAAK,IAAI,GAAG;AACpB,aAAO,MAAM,KAAK,IAAI;AAAA,IACxB,OAAO;AACL,aAAO,KAAK;AAAA,IACd;AAAA,EACF;AAAA,EACA,SAAS;AACP,UAAM,QAAQ;AAAA,MACZ,QAAQ,KAAK;AAAA,MACb,OAAO,KAAK;AAAA,IACd;AACA,WAAO,EAAE,OAAO;AAAA,MACd;AAAA,MACA,WAAW;AAAA,IACb,CAAC;AAAA,EACH;AACF;",
  "names": []
}
