{
  "version": 3,
  "sources": ["../../../../../../node_modules/@astrouxds/astro-web-components/dist/esm/rux-icon-pan-tool.entry.js"],
  "sourcesContent": ["import { r as registerInstance, h } from './index-416188d1.js';\nconst svgIcon = '<svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M21.5 4C20.67 4 20 4.67 20 5.5V10.5C20 10.78 19.78 11 19.5 11C19.22 11 19 10.78 19 10.5V2.5C19 1.67 18.33 1 17.5 1C16.67 1 16 1.67 16 2.5V10.5C16 10.78 15.78 11 15.5 11C15.22 11 15 10.78 15 10.5V1.5C15 0.67 14.33 0 13.5 0C12.67 0 12 0.67 12 1.5V10.49C12 10.77 11.78 10.99 11.5 10.99C11.22 10.99 11 10.77 11 10.49V4.5C11 3.67 10.33 3 9.5 3C8.67 3 8 3.67 8 4.5V15.91L3.88 13.56C3.3 13.23 2.58 13.32 2.1 13.78C1.5 14.36 1.48 15.32 2.07 15.91L8.85 22.8C9.6 23.57 10.62 24 11.7 24H19C21.21 24 23 22.21 23 20V5.5C23 4.67 22.33 4 21.5 4Z\" fill=\"currentColor\"/></svg>';\nconst RuxIconPanTool = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.size = 'auto';\n  }\n  get iconSize() {\n    const sizes = {\n      'extra-small': '1rem',\n      small: '2rem',\n      normal: '3rem',\n      large: '4rem'\n    };\n    if (sizes[this.size]) {\n      return sizes[this.size];\n    } else {\n      return this.size;\n    }\n  }\n  render() {\n    const style = {\n      height: this.iconSize,\n      width: this.iconSize\n    };\n    return h(\"div\", {\n      style: style,\n      innerHTML: svgIcon\n    });\n  }\n};\nexport { RuxIconPanTool as rux_icon_pan_tool };"],
  "mappings": ";;;;;;;AACA,IAAM,UAAU;AAChB,IAAM,iBAAiB,MAAM;AAAA,EAC3B,YAAY,SAAS;AACnB,qBAAiB,MAAM,OAAO;AAC9B,SAAK,OAAO;AAAA,EACd;AAAA,EACA,IAAI,WAAW;AACb,UAAM,QAAQ;AAAA,MACZ,eAAe;AAAA,MACf,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AACA,QAAI,MAAM,KAAK,IAAI,GAAG;AACpB,aAAO,MAAM,KAAK,IAAI;AAAA,IACxB,OAAO;AACL,aAAO,KAAK;AAAA,IACd;AAAA,EACF;AAAA,EACA,SAAS;AACP,UAAM,QAAQ;AAAA,MACZ,QAAQ,KAAK;AAAA,MACb,OAAO,KAAK;AAAA,IACd;AACA,WAAO,EAAE,OAAO;AAAA,MACd;AAAA,MACA,WAAW;AAAA,IACb,CAAC;AAAA,EACH;AACF;",
  "names": []
}
