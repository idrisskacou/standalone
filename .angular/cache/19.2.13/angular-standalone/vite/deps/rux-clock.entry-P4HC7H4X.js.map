{
  "version": 3,
  "sources": ["../../../../../../node_modules/@astrouxds/astro-web-components/dist/esm/rux-clock.entry.js"],
  "sourcesContent": ["import { r as registerInstance, h, H as Host } from './index-416188d1.js';\nimport { f as format, u as utcToZonedTime } from './index-bf9fd6cc.js';\nimport { r as requiredArgs, t as toDate } from './index-33004084.js';\nimport { g as getTimezoneOffsetInMilliseconds } from './index-0928580a.js';\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nfunction startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nfunction differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\n\nfunction startOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var cleanDate = toDate(dirtyDate);\n  var date = new Date(0);\n  date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the day of year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\n\nfunction getDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = differenceInCalendarDays(date, startOfYear(date));\n  var dayOfYear = diff + 1;\n  return dayOfYear;\n}\nconst militaryTimezones = {\n  A: '+01:00',\n  B: '+02:00',\n  C: '+03:00',\n  D: '+04:00',\n  E: '+05:00',\n  F: '+06:00',\n  G: '+07:00',\n  H: '+08:00',\n  I: '+09:00',\n  K: '+10:00',\n  L: '+11:00',\n  M: '+12:00',\n  N: '-01:00',\n  O: '-02:00',\n  P: '-03:00',\n  Q: '-04:00',\n  R: '-05:00',\n  S: '-06:00',\n  T: '-07:00',\n  U: '-08:00',\n  V: '-09:00',\n  W: '-10:00',\n  X: '-11:00',\n  Y: '-12:00',\n  Z: '+00:00'\n};\nconst ruxClockCss = \":host{display:flex;margin:var(--spacing-0, 0rem);color:var(--color-palette-neutral-000, #ffffff);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host([hidden]){display:none}:host(:not([hide-labels])){height:calc(var(--spacing-8, 2rem) * 2)}.rux-clock{display:flex;user-select:none;color:var(--clock-text-color)}.rux-clock__segment{display:flex;flex-direction:column;align-items:center}.rux-clock__segment__value{display:flex;align-items:center;color:var(--gsb-color-text, #ffffff);font-family:var(--font-monospace-1-font-family, 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif);font-variant-numeric:tabular-nums;font-weight:var(--font-monospace-1-font-weight, 500);font-size:var(--font-monospace-1-font-size, 1.75rem);letter-spacing:var(--font-monospace-1-letter-spacing, 0em);box-shadow:var(--gsb-color-background, #172635) 0 0 0 1px inset;background-color:var(--clock-datetime-color-background, #101923);white-space:nowrap;overflow-y:hidden;text-overflow:ellipsis;height:var(--spacing-10, 2.5rem);padding:var(--spacing-0, 0rem) var(--spacing-3, 0.75rem)}:host([small]) .rux-clock__segment__value{height:var(--spacing-10, 2.5rem);padding:var(--spacing-1, 0.25rem) var(--spacing-3, 0.75rem);font-size:1.15rem;font-weight:var(--font-weight-medium)}.rux-clock__segment__label{font-family:var(--font-body-2-font-family, 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif);font-size:var(--font-body-2-font-size, 0.875rem);font-weight:var(--font-body-2-font-weight, 400);letter-spacing:var(--font-body-2-letter-spacing, 0.005em);color:var(--color-palette-neutral-000, #ffffff);background:var(--gsb-color-background, #172635);padding:var(--spacing-0, 0rem) var(--spacing-3, 0.75rem) var(--spacing-0, 0rem) var(--spacing-3, 0.75rem);line-height:var(--font-body-3-line-height, calc(16 / 12));width:-moz-available;width:-webkit-fill-available;width:fill-available;height:var(--spacing-6, 1.5rem);display:flex;align-items:flex-end;justify-content:center;text-align:center}.rux-clock__aos{margin-left:var(--spacing-4, 1rem)}\";\nconst RuxClock = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this._timezone = 'UTC';\n    this.tzFormat = 'z';\n    this.hasRun = false;\n    this._time = undefined;\n    this._rawTime = undefined;\n    this.aos = undefined;\n    this.static = false;\n    this.los = undefined;\n    this.timezone = 'UTC';\n    this.hideTimezone = false;\n    this.hideDate = false;\n    this.hideLabels = false;\n    this.dateIn = undefined;\n    this.small = false;\n  }\n  updateAos(newValue) {\n    this.convertedAos = this._formatLosAosDateIn(newValue);\n  }\n  updateLos(newValue) {\n    this.convertedLos = this._formatLosAosDateIn(newValue);\n  }\n  handleDateInChange() {\n    clearTimeout(this._timer);\n    this._rawTime = new Date(this.dateIn);\n    this._handleDateIn();\n    this._updateTime();\n  }\n  timezoneChanged() {\n    this._convertTimezone(this.timezone);\n    if (this.aos) this.convertedAos = this._formatLosAosDateIn(this.aos);\n    if (this.los) this.convertedLos = this._formatLosAosDateIn(this.los);\n    this._updateTime();\n  }\n  get time() {\n    return this._time;\n  }\n  connectedCallback() {\n    this._convertTimezone(this.timezone);\n    if (this.dateIn) {\n      this._handleDateIn();\n    } else {\n      if (!this.static) {\n        this._timer = window.setInterval(() => {\n          this._updateTime();\n        }, 1000);\n      }\n    }\n    if (this.aos) this.convertedAos = this._formatLosAosDateIn(this.aos);\n    if (this.los) this.convertedLos = this._formatLosAosDateIn(this.los);\n  }\n  disconnectedCallback() {\n    clearTimeout(this._timer);\n  }\n  componentWillLoad() {\n    this._timezone = this.timezone;\n    this._convertTimezone(this.timezone);\n    this._updateTime();\n  }\n  _formatTime(time, timezone) {\n    return format(utcToZonedTime(time, timezone), `HH:mm:ss ${this.hideTimezone ? '' : this.tzFormat}`, {\n      timeZone: timezone\n    });\n  }\n  _handleDateIn() {\n    this._formatLosAosDateIn(this.dateIn);\n    this._time = this.dateIn;\n    if (!this._rawTime) this._rawTime = new Date(this.dateIn);\n    if (this._validateDateIn(this._rawTime)) {\n      if (!this.static) {\n        this._timer = window.setInterval(() => {\n          this._updateTime();\n        }, 1000);\n      }\n    } else {\n      console.warn(`The date-in value of ${this.dateIn} is not a valid date.`);\n    }\n  }\n  /**\n   * @param date a Date type to be validated\n   * @returns A boolean representative of if the date provided is valid\n   */\n  _validateDateIn(date) {\n    //If it's not valid then date.getTime() will be NaN, which isn't equal to itself\n    return date.getTime() === date.getTime();\n  }\n  _updateTime() {\n    if (this.dateIn) {\n      if (!this.hasRun) {\n        this._time = this._formatTime(this._rawTime, this._timezone);\n        const clockDate = utcToZonedTime(this._rawTime, this._timezone);\n        this.dayOfYear = getDayOfYear(clockDate);\n        this.hasRun = true;\n      } else {\n        let seconds = this._rawTime.getSeconds() + 1;\n        this._rawTime.setSeconds(seconds);\n        this._time = this._formatTime(this._rawTime, this._timezone);\n        const clockDate = utcToZonedTime(this._rawTime, this._timezone);\n        this.dayOfYear = getDayOfYear(clockDate);\n      }\n    } else {\n      this._time = this._formatTime(new Date(Date.now()), this._timezone);\n      /**\n       * Date.now() is a unix timestamp of the current time in UTC\n       * We need to convert that to the Clock's defined timezone\n       * before we get the day of the year.\n       */\n      const localDate = new Date(Date.now());\n      const clockDate = utcToZonedTime(localDate, this._timezone);\n      this.dayOfYear = getDayOfYear(clockDate);\n    }\n  }\n  /**\n   * @param dateTime A date string in unix or ISO formats\n   * @returns A timezone local ISO formatted 24h time string\n   */\n  _formatLosAosDateIn(dateTime) {\n    // Check for unix timestamp\n    if (new Date(Number(dateTime)).getTime() > 0) {\n      dateTime = Number(dateTime);\n      // If date-in is provided and matches the conversion made if it's a unix stamp, then\n      // we need to handle it as a unix stamp.\n      if (this.dateIn && parseInt(this.dateIn) === dateTime) {\n        let d = new Date(dateTime);\n        this._rawTime = d;\n      }\n    }\n    return format(utcToZonedTime(dateTime, this._timezone), 'HH:mm:ss');\n  }\n  _convertTimezone(timezone) {\n    const _militaryTimezones = militaryTimezones;\n    this._timezone = _militaryTimezones[timezone.toUpperCase()];\n    this.tzFormat = 'O';\n    if (!this._timezone) {\n      this._timezone = timezone;\n      this.tzFormat = 'zzz';\n    } else if (timezone.toUpperCase() == 'Z') {\n      this.tzFormat = 'X';\n    }\n  }\n  render() {\n    return h(Host, null, h(\"div\", {\n      class: \"rux-clock\",\n      part: \"container\"\n    }, !this.hideDate && h(\"div\", {\n      class: \"rux-clock__segment\"\n    }, h(\"div\", {\n      class: \"rux-clock__segment__value\",\n      \"aria-labelledby\": \"rux-clock__day-of-year-label\",\n      part: \"date\"\n    }, this.dayOfYear.toString().padStart(3, '0')), !this.hideLabels && h(\"div\", {\n      class: \"rux-clock__segment__label\",\n      id: \"rux-clock__day-of-year-label\",\n      part: \"date-label\"\n    }, \"Date\")), h(\"div\", {\n      class: \"rux-clock__segment\"\n    }, h(\"div\", {\n      class: \"rux-clock__segment__value\",\n      \"aria-labelledby\": \"rux-clock__time-label\",\n      part: \"time\"\n    }, this.time), !this.hideLabels && h(\"div\", {\n      class: \"rux-clock__segment__label\",\n      id: \"rux-clock__time-label\",\n      part: \"time-label\"\n    }, \"Time\")), this.aos && h(\"div\", {\n      class: \"rux-clock__segment rux-clock__aos\"\n    }, h(\"div\", {\n      class: \"rux-clock__segment__value\",\n      \"aria-labelledby\": \"rux-clock__time-label--aos\",\n      id: \"rux-clock__time--aos\",\n      part: \"aos\"\n    }, this.convertedAos), !this.hideLabels && h(\"div\", {\n      class: \"rux-clock__segment__label\",\n      id: \"rux-clock__time-label--aos\",\n      part: \"aos-label\"\n    }, \"AOS\")), this.los && h(\"div\", {\n      class: \"rux-clock__segment rux-clock__los\"\n    }, h(\"div\", {\n      class: \"rux-clock__segment__value\",\n      \"aria-labelledby\": \"rux-clock__time-label--los\",\n      id: \"rux-clock__time--los\",\n      part: \"los\"\n    }, this.convertedLos), !this.hideLabels && h(\"div\", {\n      class: \"rux-clock__segment__label\",\n      id: \"rux-clock__time-label--los\",\n      part: \"los-label\"\n    }, \"LOS\"))));\n  }\n  static get watchers() {\n    return {\n      \"aos\": [\"updateAos\"],\n      \"los\": [\"updateLos\"],\n      \"dateIn\": [\"handleDateInChange\"],\n      \"timezone\": [\"timezoneChanged\"]\n    };\n  }\n};\nRuxClock.style = ruxClockCss;\nexport { RuxClock as rux_clock };"],
  "mappings": "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",
  "names": []
}
