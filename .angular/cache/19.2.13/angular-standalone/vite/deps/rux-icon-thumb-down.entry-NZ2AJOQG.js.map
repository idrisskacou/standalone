{
  "version": 3,
  "sources": ["../../../../../../node_modules/@astrouxds/astro-web-components/dist/esm/rux-icon-thumb-down.entry.js"],
  "sourcesContent": ["import { r as registerInstance, h } from './index-416188d1.js';\nconst svgIcon = '<svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.41 16.4L10.88 21.94C10.3 22.53 9.36002 22.53 8.77002 21.95C8.41002 21.59 8.26002 21.08 8.36002 20.58L9.31002 16H3.66002C1.51002 16 0.0600216 13.8 0.910022 11.82L4.17002 4.21C4.48002 3.48 5.20002 3 6.00002 3H14.99C16.09 3 16.99 3.9 16.99 5V14.99C16.99 15.52 16.78 16.03 16.41 16.4ZM19 5C19 3.9 19.9 3 21 3C22.1 3 23 3.9 23 5V13C23 14.1 22.1 15 21 15C19.9 15 19 14.1 19 13V5Z\" fill=\"currentColor\"/></svg>';\nconst RuxIconThumbDown = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.size = 'auto';\n  }\n  get iconSize() {\n    const sizes = {\n      'extra-small': '1rem',\n      small: '2rem',\n      normal: '3rem',\n      large: '4rem'\n    };\n    if (sizes[this.size]) {\n      return sizes[this.size];\n    } else {\n      return this.size;\n    }\n  }\n  render() {\n    const style = {\n      height: this.iconSize,\n      width: this.iconSize\n    };\n    return h(\"div\", {\n      style: style,\n      innerHTML: svgIcon\n    });\n  }\n};\nexport { RuxIconThumbDown as rux_icon_thumb_down };"],
  "mappings": ";;;;;;;AACA,IAAM,UAAU;AAChB,IAAM,mBAAmB,MAAM;AAAA,EAC7B,YAAY,SAAS;AACnB,qBAAiB,MAAM,OAAO;AAC9B,SAAK,OAAO;AAAA,EACd;AAAA,EACA,IAAI,WAAW;AACb,UAAM,QAAQ;AAAA,MACZ,eAAe;AAAA,MACf,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AACA,QAAI,MAAM,KAAK,IAAI,GAAG;AACpB,aAAO,MAAM,KAAK,IAAI;AAAA,IACxB,OAAO;AACL,aAAO,KAAK;AAAA,IACd;AAAA,EACF;AAAA,EACA,SAAS;AACP,UAAM,QAAQ;AAAA,MACZ,QAAQ,KAAK;AAAA,MACb,OAAO,KAAK;AAAA,IACd;AACA,WAAO,EAAE,OAAO;AAAA,MACd;AAAA,MACA,WAAW;AAAA,IACb,CAAC;AAAA,EACH;AACF;",
  "names": []
}
