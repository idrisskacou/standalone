{
  "version": 3,
  "sources": ["../../../../../../node_modules/@astrouxds/astro-web-components/dist/esm/rux-track.entry.js"],
  "sourcesContent": ["import { r as registerInstance, h, H as Host, g as getElement } from './index-416188d1.js';\nimport { b as differenceInMilliseconds, a as differenceInMinutes, d as differenceInHours } from './index-1ff547d6.js';\nimport { r as requiredArgs } from './index-33004084.js';\n\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nfunction differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}\nconst ruxTrackCss = \".rux-track{background:var(--color-background-surface-default, #1b2d3e);width:fit-content;border-bottom:2px solid var(--color-background-base-default, #101923)}.rux-track__header{box-sizing:border-box;padding:11px 8px 13px 8px;background:var(--color-background-surface-default, #1b2d3e);border-right:2px solid var(--color-background-base-default, #101923);display:flex;align-items:center;font-family:var(--font-body-1-font-family, 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif);font-size:var(--font-body-1-font-size, 1rem);font-weight:var(--font-body-1-font-weight, 400);letter-spacing:var(--font-body-1-letter-spacing, 0.005em);position:sticky;left:0;min-width:184px;z-index:2}.rux-timeline{scrollbar-color:var(--color-border-interactive-muted, #2b659b);position:relative;display:grid;grid-template-rows:auto;background:var(--color-background-surface-default, #1b2d3e)}.rux-track__played{grid-row-start:1;grid-column-start:2;grid-row-end:auto;background:var(--color-background-surface-selected, #1c3f5e)}.hidden{display:none}\";\nconst RuxTrack = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.hasRuler = false;\n    this.width = 0;\n    this.columns = 0;\n    this.interval = undefined;\n    this.start = '';\n    this.end = '';\n    this.timezone = 'UTC';\n    this.playhead = undefined;\n  }\n  handleUpdate(_newValue, old) {\n    if (old) {\n      this.initializeRows();\n    }\n  }\n  handlePlayheadChange() {\n    this.initializeRows();\n  }\n  handleTimezoneUpdate() {\n    this.initializeRows();\n  }\n  handleTimeRegionChange(e) {\n    this.initializeRows();\n    e.stopPropagation();\n  }\n  connectedCallback() {\n    this._handleSlotChange = this._handleSlotChange.bind(this);\n  }\n  /**\n   * Tracks are displayed as a (CSS) grid of cells.\n   * Each cell can represent a minute or hour depending on the interval.\n   */\n  _calculateGridColumnFromTime(time) {\n    if (this.start) {\n      const timelineStart = new Date(this.start);\n      if (this.interval === 'hour') {\n        const difference = Math.abs(differenceInMinutes(timelineStart, new Date(time)));\n        return difference + 2;\n      }\n      if (this.interval === 'minute') {\n        const difference = Math.abs(differenceInSeconds(timelineStart, new Date(time)));\n        return difference + 2;\n      }\n      if (this.interval === 'day') {\n        const difference = Math.abs(differenceInHours(timelineStart, new Date(time)));\n        return difference + 2;\n      }\n    }\n    return 0;\n  }\n  _validateTimeRegion(start, end) {\n    if (!start) {\n      return {\n        success: false,\n        error: 'Time Region must have a start date provided'\n      };\n    }\n    if (!end) {\n      return {\n        success: false,\n        error: 'Time Region must have a end date provided'\n      };\n    }\n    if (new Date(start) > new Date(end)) {\n      return {\n        success: false,\n        error: `The Time Region start date must be before the end date: ${start} - ${end}`\n      };\n    }\n    if (new Date(start) > new Date(this.end)) {\n      return {\n        success: false,\n        error: `The Time Region start date does not fall within the Timeline's range: ${start} - ${this.start}/${this.end}`\n      };\n    }\n    if (new Date(start) < new Date(this.start) && new Date(end) < new Date(this.start)) {\n      return {\n        success: false,\n        error: `The Time Region start and end dates do not fall within the Timeline's range: ${start} - ${end}`\n      };\n    }\n    return {\n      success: true\n    };\n  }\n  /**\n   * Time Regions are dumb and don't know anything about the grid.\n   * The Track is responsible for lining up the Time Regions with the grid.\n   */\n  initializeRows() {\n    if (this.playhead) {\n      this.playedIndicator.style.gridColumnEnd = this._calculateGridColumnFromTime(this.playhead).toString();\n    }\n    const children = [...this.el.children].filter(el => el.tagName.toLowerCase() === 'rux-time-region');\n    children.forEach(el => {\n      const isHidden = el.style.visibility === 'hidden';\n      const isValid = this._validateTimeRegion(el.start, el.end);\n      /**\n       * Store temp vars to use for calculating a Time Region's position in the grid\n       * If a Time Region's range is outside the Timeline's range (a partial event),\n       * visually it is treated as if its start/end dates = the timeline's.\n       * */\n      let start = el.start;\n      let end = el.end;\n      if (isValid.success) {\n        if (el.start < this.start && el.end > this.end) {\n          el.partial = 'ongoing';\n          start = this.start;\n          end = this.end;\n        } else if (el.start < this.start) {\n          el.partial = 'start';\n          start = this.start;\n        } else if (el.end > this.end) {\n          el.partial = 'end';\n          end = this.end;\n        } else {\n          el.partial = 'none';\n        }\n        el.timezone = this.timezone;\n        el.style.gridRow = '1';\n        el.style.display = 'block';\n        const gridColumn = `${this._calculateGridColumnFromTime(start)} / ${this._calculateGridColumnFromTime(end)}`;\n        el.style.gridColumn = gridColumn;\n      } else {\n        if (!isHidden) {\n          el.style.display = 'none';\n        }\n      }\n    });\n  }\n  _handleSlotChange() {\n    this.initializeRows();\n    const hasRuler = [...this.el.children].find(el => el.tagName.toLowerCase() === 'rux-ruler');\n    this.hasRuler = !!hasRuler;\n  }\n  render() {\n    return h(Host, null, h(\"div\", {\n      class: \"rux-timeline rux-track\",\n      style: {\n        gridTemplateColumns: `[header] 200px repeat(${this.columns}, ${this.width}px)`\n      },\n      part: \"container\"\n    }, h(\"div\", {\n      class: \"rux-track__header\",\n      part: \"track-header\",\n      style: {\n        gridRow: '1'\n      }\n    }, h(\"slot\", {\n      name: \"label\"\n    })), h(\"slot\", {\n      onSlotchange: this._handleSlotChange\n    }), h(\"div\", {\n      class: {\n        'rux-track__played': this.playhead,\n        hidden: this.hasRuler\n      },\n      ref: el => this.playedIndicator = el\n    })));\n  }\n  get el() {\n    return getElement(this);\n  }\n  static get watchers() {\n    return {\n      \"start\": [\"handleUpdate\"],\n      \"end\": [\"handleUpdate\"],\n      \"interval\": [\"handleUpdate\"],\n      \"playhead\": [\"handlePlayheadChange\"],\n      \"timezone\": [\"handleTimezoneUpdate\"]\n    };\n  }\n};\nRuxTrack.style = ruxTrackCss;\nexport { RuxTrack as rux_track };"],
  "mappings": "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",
  "names": []
}
