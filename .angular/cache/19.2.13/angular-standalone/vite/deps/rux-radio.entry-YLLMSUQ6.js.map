{
  "version": 3,
  "sources": ["../../../../../../node_modules/@astrouxds/astro-web-components/dist/esm/rux-radio.entry.js"],
  "sourcesContent": ["import { r as registerInstance, c as createEvent, h, g as getElement } from './index-416188d1.js';\nimport { h as hasSlot } from './utils-ef146867.js';\nconst ruxRadioCss = \":host{display:inline-block;box-sizing:border-box}:host *,:host *::before,:host *::after{box-sizing:inherit}.rux-form-field{display:flex;flex-direction:column;font-family:var(--font-control-body-1-font-family, 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif);font-size:var(--font-control-body-1-font-size, 1rem);letter-spacing:var(--font-control-body-1-letter-spacing, 0.005em);font-weight:var(--font-control-body-1-font-weight, 400);color:var(--color-text-primary, #ffffff)}.rux-radio{display:flex;position:relative;line-height:1.2}.rux-radio input[type=radio]{-webkit-appearance:none;appearance:none;margin:0}.rux-radio input[type=radio]+label{position:relative;display:flex;align-items:center;justify-content:flex-start;color:var(--color-text-primary, #ffffff);cursor:pointer}.rux-radio input[type=radio]+label::before{box-sizing:border-box;display:flex;flex-shrink:0;flex-grow:0;content:\\\"\\\";align-self:start;height:calc(var(--spacing-4, 1rem) + var(--spacing-1, 0.25rem));width:calc(var(--spacing-4, 1rem) + var(--spacing-1, 0.25rem));margin:calc(var(--spacing-1, 0.25rem) / 2);margin-right:calc( var(--spacing-2, 0.5rem) + (var(--spacing-1, 0.25rem) / 2) );border:1px solid var(--color-border-interactive-muted, #2b659b);border-radius:var(--radius-circle, 50%);background-color:var(--color-background-base-default, #101923)}.rux-radio input[type=radio]+label::after{position:absolute;top:5px;display:flex;content:\\\"\\\"}.rux-radio input[type=radio]+.rux-radio--no-label::before{margin-right:calc(var(--spacing-1, 0.25rem) / 2)}.rux-radio input[type=radio]:checked+label::before{background-color:var(--color-background-base-default, #101923);border-color:var(--color-border-interactive-muted, #2b659b)}.rux-radio input[type=radio]:checked+label::after{position:absolute;top:var(--spacing-2, 0.5rem);display:flex;content:\\\"\\\";left:var(--spacing-2, 0.5rem);height:var(--spacing-2, 0.5rem);width:var(--spacing-2, 0.5rem);border-radius:var(--radius-circle, 50%);background-color:var(--color-background-interactive-default, #4dacff)}.rux-radio input[type=radio]:disabled+label{cursor:not-allowed;opacity:var(--opacity-disabled, 40%)}.rux-radio input[type=radio]:not(:disabled):hover+label::before,.rux-radio input[type=radio]:not(:disabled):checked:hover+label::before{border-color:var(--color-background-interactive-hover, #92cbff)}.rux-radio input[type=radio]:not(:disabled):hover+label::after,.rux-radio input[type=radio]:not(:disabled):checked:hover+label::after{background-color:var(--color-background-interactive-default, #4dacff)}.rux-radio input[type=radio]:not(:disabled):focus-visible+label,.rux-radio input[type=radio]:not(:disabled):checked:focus-visible+label{border-radius:var(--radius-base, 3px);outline:var(--border-width-focus-default, 1px) solid var(--color-border-focus-default, #da9ce7);outline-offset:var(--spacing-focus-default, 0.125rem)}:host([hidden]){display:none}\";\nlet id = 0;\nconst RuxRadio = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ruxBlur = createEvent(this, \"ruxblur\", 7);\n    this.radioId = `rux-radio-${++id}`;\n    this.radioGroup = null;\n    this._onBlur = () => {\n      this.ruxBlur.emit();\n    };\n    this.hasLabelSlot = false;\n    this.buttonTabindex = -1;\n    this.name = '';\n    this.value = '';\n    this.checked = false;\n    this.disabled = false;\n    this.label = undefined;\n  }\n  handleLabelChange() {\n    this._handleSlotChange();\n  }\n  /** @internal */\n  async setFocus(ev) {\n    var _a;\n    ev.stopPropagation();\n    ev.preventDefault();\n    (_a = this.inputEl) === null || _a === void 0 ? void 0 : _a.focus();\n  }\n  /** @internal */\n  async setButtonTabindex(value) {\n    this.buttonTabindex = value;\n  }\n  connectedCallback() {\n    this._onChange = this._onChange.bind(this);\n    this._handleSlotChange = this._handleSlotChange.bind(this);\n    this.radioGroup = this.el.closest('rux-radio-group');\n    this._syncFromGroup = this._syncFromGroup.bind(this);\n    if (this.radioGroup) {\n      this._syncFromGroup();\n      this.radioGroup.addEventListener('ruxchange', this._syncFromGroup);\n    }\n  }\n  componentWillLoad() {\n    this._handleSlotChange();\n  }\n  disconnectedCallback() {\n    if (this.radioGroup) {\n      this.radioGroup.removeEventListener('ruxchange', this._syncFromGroup);\n    }\n  }\n  _handleSlotChange() {\n    this.hasLabelSlot = hasSlot(this.el);\n  }\n  /**\n   * Sets checked property when the parent Radio Group value changes.\n   */\n  _syncFromGroup() {\n    if (this.radioGroup && this.radioGroup.value) {\n      this.checked = this.radioGroup.value === this.value;\n    }\n  }\n  _onChange(e) {\n    const target = e.target;\n    this.checked = target.checked;\n  }\n  get hasLabel() {\n    return this.label ? true : this.hasLabelSlot;\n  }\n  render() {\n    const {\n      label,\n      radioId,\n      checked,\n      disabled,\n      name,\n      value,\n      _onChange,\n      _onBlur,\n      hasLabel,\n      buttonTabindex\n    } = this;\n    return h(\"div\", {\n      class: \"rux-form-field\",\n      part: \"form-field\"\n    }, h(\"div\", {\n      class: \"rux-radio\"\n    }, h(\"input\", {\n      type: \"radio\",\n      name: name,\n      id: radioId,\n      disabled: disabled,\n      checked: checked,\n      value: value,\n      tabindex: buttonTabindex,\n      onChange: _onChange,\n      onBlur: _onBlur,\n      ref: el => this.inputEl = el\n    }), h(\"label\", {\n      htmlFor: radioId,\n      part: \"label\",\n      class: {\n        'rux-radio--no-label': !hasLabel\n      }\n    }, h(\"slot\", null, label))));\n  }\n  get el() {\n    return getElement(this);\n  }\n  static get watchers() {\n    return {\n      \"label\": [\"handleLabelChange\"]\n    };\n  }\n};\nRuxRadio.style = ruxRadioCss;\nexport { RuxRadio as rux_radio };"],
  "mappings": "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",
  "names": []
}
