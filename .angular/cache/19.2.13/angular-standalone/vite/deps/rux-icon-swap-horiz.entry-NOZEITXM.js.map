{
  "version": 3,
  "sources": ["../../../../../../node_modules/@astrouxds/astro-web-components/dist/esm/rux-icon-swap-horiz.entry.js"],
  "sourcesContent": ["import { r as registerInstance, h } from './index-416188d1.js';\nconst svgIcon = '<svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.87 5.86L20.65 8.65C20.84 8.84 20.84 9.16 20.64 9.35L17.86 12.14C17.55 12.46 17.01 12.24 17.01 11.79V10H11C10.45 10 10 9.55 10 9C10 8.45 10.45 8 11 8H17.02V6.21C17.02 5.77 17.56 5.54 17.87 5.86ZM3.36003 14.65L6.14003 11.86C6.45003 11.54 6.99003 11.76 6.99003 12.21V14H13C13.55 14 14 14.45 14 15C14 15.55 13.55 16 13 16H6.99003V17.8C6.99003 18.24 6.45003 18.47 6.14003 18.15L3.36003 15.36C3.17003 15.16 3.17003 14.85 3.36003 14.65Z\" fill=\"currentColor\"/></svg>';\nconst RuxIconSwapHoriz = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.size = 'auto';\n  }\n  get iconSize() {\n    const sizes = {\n      'extra-small': '1rem',\n      small: '2rem',\n      normal: '3rem',\n      large: '4rem'\n    };\n    if (sizes[this.size]) {\n      return sizes[this.size];\n    } else {\n      return this.size;\n    }\n  }\n  render() {\n    const style = {\n      height: this.iconSize,\n      width: this.iconSize\n    };\n    return h(\"div\", {\n      style: style,\n      innerHTML: svgIcon\n    });\n  }\n};\nexport { RuxIconSwapHoriz as rux_icon_swap_horiz };"],
  "mappings": ";;;;;;;AACA,IAAM,UAAU;AAChB,IAAM,mBAAmB,MAAM;AAAA,EAC7B,YAAY,SAAS;AACnB,qBAAiB,MAAM,OAAO;AAC9B,SAAK,OAAO;AAAA,EACd;AAAA,EACA,IAAI,WAAW;AACb,UAAM,QAAQ;AAAA,MACZ,eAAe;AAAA,MACf,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AACA,QAAI,MAAM,KAAK,IAAI,GAAG;AACpB,aAAO,MAAM,KAAK,IAAI;AAAA,IACxB,OAAO;AACL,aAAO,KAAK;AAAA,IACd;AAAA,EACF;AAAA,EACA,SAAS;AACP,UAAM,QAAQ;AAAA,MACZ,QAAQ,KAAK;AAAA,MACb,OAAO,KAAK;AAAA,IACd;AACA,WAAO,EAAE,OAAO;AAAA,MACd;AAAA,MACA,WAAW;AAAA,IACb,CAAC;AAAA,EACH;AACF;",
  "names": []
}
