{
  "version": 3,
  "sources": ["../../../../../../node_modules/@astrouxds/astro-web-components/dist/esm/index-fe8e5d4f.js"],
  "sourcesContent": ["import { c as createCommonjsModule, g as getDefaultExportFromCjs, f as format, u as utcToZonedTime } from './index-bf9fd6cc.js';\nvar assign_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = assign;\n  function assign(target, dirtyObject) {\n    if (target == null) {\n      throw new TypeError('assign requires that input parameter not be null or undefined');\n    }\n    dirtyObject = dirtyObject || {};\n    for (var property in dirtyObject) {\n      if (dirtyObject.hasOwnProperty(property)) {\n        target[property] = dirtyObject[property];\n      }\n    }\n    return target;\n  }\n  module.exports = exports.default;\n});\nvar cloneObject_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = cloneObject;\n  var _index = _interopRequireDefault(assign_1);\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  function cloneObject(dirtyObject) {\n    return (0, _index.default)({}, dirtyObject);\n  }\n  module.exports = exports.default;\n});\nconst cloneObject = /*@__PURE__*/getDefaultExportFromCjs(cloneObject_1);\n\n/**\n * @name formatInTimeZone\n * @category Time Zone Helpers\n * @summary Gets the offset in milliseconds between the time zone and Universal Coordinated Time (UTC)\n *\n * @param {Date|String|Number} date - the date representing the local time / real UTC time\n * @param {String} timeZone - the time zone this date should be formatted for; can be an offset or IANA time zone\n * @param {String} formatStr - the string of tokens\n * @param {OptionsWithTZ} [options] - the object with options. See [Options]{@link https://date-fns.org/docs/Options}\n * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link\n *   https://date-fns.org/docs/toDate}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See\n *   [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {Boolean} [options.awareOfUnicodeTokens=false] - if true, allows usage of Unicode tokens causes confusion:\n *   - Some of the day of year tokens (`D`, `DD`) that are confused with the day of month tokens (`d`, `dd`).\n *   - Some of the local week-numbering year tokens (`YY`, `YYYY`) that are confused with the calendar year tokens\n *   (`yy`, `yyyy`). See: https://git.io/fxCyr\n * @param {String} [options.timeZone=''] - used to specify the IANA time zone offset of a date String.\n * @returns {String} the formatted date string\n */\nfunction formatInTimeZone(date, timeZone, formatStr, options) {\n  var extendedOptions = cloneObject(options);\n  extendedOptions.timeZone = timeZone;\n  return format(utcToZonedTime(date, timeZone), formatStr, extendedOptions);\n}\nexport { formatInTimeZone as f };"],
  "mappings": ";;;;;;;;AACA,IAAI,WAAW,qBAAqB,SAAU,QAAQ,SAAS;AAC7D,SAAO,eAAe,SAAS,cAAc;AAAA,IAC3C,OAAO;AAAA,EACT,CAAC;AACD,UAAQ,UAAU;AAClB,WAAS,OAAO,QAAQ,aAAa;AACnC,QAAI,UAAU,MAAM;AAClB,YAAM,IAAI,UAAU,+DAA+D;AAAA,IACrF;AACA,kBAAc,eAAe,CAAC;AAC9B,aAAS,YAAY,aAAa;AAChC,UAAI,YAAY,eAAe,QAAQ,GAAG;AACxC,eAAO,QAAQ,IAAI,YAAY,QAAQ;AAAA,MACzC;AAAA,IACF;AACA,WAAO;AAAA,EACT;AACA,SAAO,UAAU,QAAQ;AAC3B,CAAC;AACD,IAAI,gBAAgB,qBAAqB,SAAU,QAAQ,SAAS;AAClE,SAAO,eAAe,SAAS,cAAc;AAAA,IAC3C,OAAO;AAAA,EACT,CAAC;AACD,UAAQ,UAAUA;AAClB,MAAI,SAAS,uBAAuB,QAAQ;AAC5C,WAAS,uBAAuB,KAAK;AACnC,WAAO,OAAO,IAAI,aAAa,MAAM;AAAA,MACnC,SAAS;AAAA,IACX;AAAA,EACF;AACA,WAASA,aAAY,aAAa;AAChC,YAAQ,GAAG,OAAO,SAAS,CAAC,GAAG,WAAW;AAAA,EAC5C;AACA,SAAO,UAAU,QAAQ;AAC3B,CAAC;AACD,IAAM,cAA2B,wBAAwB,aAAa;AAwBtE,SAAS,iBAAiB,MAAM,UAAU,WAAW,SAAS;AAC5D,MAAI,kBAAkB,YAAY,OAAO;AACzC,kBAAgB,WAAW;AAC3B,SAAO,OAAO,eAAe,MAAM,QAAQ,GAAG,WAAW,eAAe;AAC1E;",
  "names": ["cloneObject"]
}
