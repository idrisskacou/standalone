{
  "version": 3,
  "sources": ["../../../../../../node_modules/@astrouxds/astro-web-components/dist/esm/rux-tag.entry.js"],
  "sourcesContent": ["import { r as registerInstance, h, H as Host, g as getElement } from './index-416188d1.js';\nimport { h as hasSlot } from './utils-ef146867.js';\nconst ruxTagCss = \":host{display:flex;justify-content:center;align-items:center;border-radius:var(--radius-base, 3px);font-size:var(--font-body-2-bold-font-size, 0.875rem);font-weight:var(--font-body-2-bold-font-weight, 700);line-height:var(--font-body-2-bold-line-height, calc(20 / 14));font-family:var(--font-body-2-bold-font-family, 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif);letter-spacing:var(--font-body-2-bold-letter-spacing, 0.005em);padding:0.25rem 0.625rem;text-align:center;color:var(--color-palette-neutral-000, #ffffff);box-sizing:border-box}:host(.is-undefined){height:1.5rem;width:3.75rem;border:1px solid var(--status-symbol-color-fill-off);background:var(--color-palette-grey-800, #3c3e42);box-shadow:var(--tag-shadow-inner-unknown, inset 0px 0px 5px 0px rgb(164, 171, 182))}:host([status=pass]){height:1.5rem;width:3.75rem;border:1px solid var(--status-symbol-color-fill-normal-on-dark, #56f000);background:var(--color-palette-green-900, #005a00);box-shadow:var(--tag-shadow-inner-pass, inset 0px 0px 5px 0px rgb(86, 240, 0))}:host([status=fail]){height:1.5rem;width:3.75rem;border:1px solid var(--status-symbol-color-fill-critical-on-dark, #ff3838);background:var(--color-palette-red-900, #661102);box-shadow:var(--tag-shadow-inner-fail, inset 0px 0px 5px 0px rgb(255, 56, 56))}:host([status=unknown]){height:1.5rem;width:3.75rem;border:1px solid var(--status-symbol-color-fill-off-on-dark, #a4abb6);background:var(--color-palette-grey-800, #3c3e42);box-shadow:var(--tag-shadow-inner-unknown, inset 0px 0px 5px 0px rgb(164, 171, 182))}\";\nconst statusMap = {\n  unknown: 'UNK',\n  pass: 'PASS',\n  fail: 'FAIL'\n};\nconst RuxTag = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.status = 'unknown';\n    this.hasSlot = false;\n  }\n  connectedCallback() {\n    this._handleSlotChange = this._handleSlotChange.bind(this);\n    this.hasSlot = hasSlot(this.el);\n  }\n  _handleSlotChange() {\n    this.hasSlot = hasSlot(this.el);\n  }\n  _getValidStatus() {\n    if (this.status) {\n      //if it is a valid status, return it\n      if (statusMap[this.status]) {\n        return statusMap[this.status];\n      }\n      //if it's not, return the default status\n      else {\n        return statusMap['unknown'];\n      }\n    }\n  }\n  render() {\n    return h(Host, {\n      class: {\n        'is-undefined': statusMap[this.status] === undefined\n      }\n    }, h(\"div\", {\n      part: \"container\"\n    }, h(\"slot\", {\n      onSlotchange: this._handleSlotChange\n    }), !this.hasSlot ? this._getValidStatus() : null));\n  }\n  get el() {\n    return getElement(this);\n  }\n};\nRuxTag.style = ruxTagCss;\nexport { RuxTag as rux_tag };"],
  "mappings": ";;;;;;;;;;;;AAEA,IAAM,YAAY;AAClB,IAAM,YAAY;AAAA,EAChB,SAAS;AAAA,EACT,MAAM;AAAA,EACN,MAAM;AACR;AACA,IAAM,SAAS,MAAM;AAAA,EACnB,YAAY,SAAS;AACnB,qBAAiB,MAAM,OAAO;AAC9B,SAAK,SAAS;AACd,SAAK,UAAU;AAAA,EACjB;AAAA,EACA,oBAAoB;AAClB,SAAK,oBAAoB,KAAK,kBAAkB,KAAK,IAAI;AACzD,SAAK,UAAU,QAAQ,KAAK,EAAE;AAAA,EAChC;AAAA,EACA,oBAAoB;AAClB,SAAK,UAAU,QAAQ,KAAK,EAAE;AAAA,EAChC;AAAA,EACA,kBAAkB;AAChB,QAAI,KAAK,QAAQ;AAEf,UAAI,UAAU,KAAK,MAAM,GAAG;AAC1B,eAAO,UAAU,KAAK,MAAM;AAAA,MAC9B,OAEK;AACH,eAAO,UAAU,SAAS;AAAA,MAC5B;AAAA,IACF;AAAA,EACF;AAAA,EACA,SAAS;AACP,WAAO,EAAE,MAAM;AAAA,MACb,OAAO;AAAA,QACL,gBAAgB,UAAU,KAAK,MAAM,MAAM;AAAA,MAC7C;AAAA,IACF,GAAG,EAAE,OAAO;AAAA,MACV,MAAM;AAAA,IACR,GAAG,EAAE,QAAQ;AAAA,MACX,cAAc,KAAK;AAAA,IACrB,CAAC,GAAG,CAAC,KAAK,UAAU,KAAK,gBAAgB,IAAI,IAAI,CAAC;AAAA,EACpD;AAAA,EACA,IAAI,KAAK;AACP,WAAO,WAAW,IAAI;AAAA,EACxB;AACF;AACA,OAAO,QAAQ;",
  "names": []
}
