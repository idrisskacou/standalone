{
  "version": 3,
  "sources": ["../../../../../../node_modules/@astrouxds/astro-web-components/dist/esm/rux-tree.entry.js"],
  "sourcesContent": ["import { r as registerInstance, h, H as Host, g as getElement } from './index-416188d1.js';\nconst ruxTreeCss = \":host{display:block;position:relative;box-sizing:border-box;padding:0;font-family:var(--font-body-1-font-family, 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif);font-size:var(--font-body-1-font-size, 1rem);font-weight:var(--font-body-1-font-weight, 400);letter-spacing:var(--font-body-1-letter-spacing, 0.005em);color:var(--color-text-primary, #ffffff);user-select:none;width:100%}:host([hidden]){display:none}\";\nconst RuxTree = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  connectedCallback() {\n    this._handleSlotChange = this._handleSlotChange.bind(this);\n    this._handleNodeSelected = this._handleNodeSelected.bind(this);\n  }\n  disconnectedCallback() {\n    var _a;\n    const slot = (_a = this.slotContainer) === null || _a === void 0 ? void 0 : _a.querySelector('slot');\n    const assignedElements = slot.assignedElements({\n      flatten: true\n    });\n    assignedElements.map(el => {\n      el.removeEventListener('ruxtreenodeselected', this._handleNodeSelected);\n    });\n  }\n  _handleSlotChange() {\n    var _a;\n    const slot = (_a = this.slotContainer) === null || _a === void 0 ? void 0 : _a.querySelector('slot');\n    const assignedElements = slot.assignedElements({\n      flatten: true\n    });\n    assignedElements.map(el => {\n      el.setAttribute('aria-level', '1');\n      el.addEventListener('ruxtreenodeselected', this._handleNodeSelected);\n    });\n  }\n  _handleNodeSelected(e) {\n    const allNodes = document.querySelectorAll('rux-tree-node');\n    const previousSelectedNode = Array.from(allNodes).find(node => {\n      var _a, _b;\n      return node.selected && ((_b = (_a = node.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('.tree-node')) === null || _b === void 0 ? void 0 : _b.id) !== e.detail;\n    });\n    if (previousSelectedNode) {\n      previousSelectedNode.selected = false;\n    }\n  }\n  render() {\n    return h(Host, {\n      role: \"tree\",\n      class: \"rux-tree\"\n    }, h(\"div\", {\n      ref: el => this.slotContainer = el\n    }, h(\"slot\", {\n      onSlotchange: this._handleSlotChange\n    })));\n  }\n  get el() {\n    return getElement(this);\n  }\n};\nRuxTree.style = ruxTreeCss;\nexport { RuxTree as rux_tree };"],
  "mappings": ";;;;;;;;;AACA,IAAM,aAAa;AACnB,IAAM,UAAU,MAAM;AAAA,EACpB,YAAY,SAAS;AACnB,qBAAiB,MAAM,OAAO;AAAA,EAChC;AAAA,EACA,oBAAoB;AAClB,SAAK,oBAAoB,KAAK,kBAAkB,KAAK,IAAI;AACzD,SAAK,sBAAsB,KAAK,oBAAoB,KAAK,IAAI;AAAA,EAC/D;AAAA,EACA,uBAAuB;AACrB,QAAI;AACJ,UAAM,QAAQ,KAAK,KAAK,mBAAmB,QAAQ,OAAO,SAAS,SAAS,GAAG,cAAc,MAAM;AACnG,UAAM,mBAAmB,KAAK,iBAAiB;AAAA,MAC7C,SAAS;AAAA,IACX,CAAC;AACD,qBAAiB,IAAI,QAAM;AACzB,SAAG,oBAAoB,uBAAuB,KAAK,mBAAmB;AAAA,IACxE,CAAC;AAAA,EACH;AAAA,EACA,oBAAoB;AAClB,QAAI;AACJ,UAAM,QAAQ,KAAK,KAAK,mBAAmB,QAAQ,OAAO,SAAS,SAAS,GAAG,cAAc,MAAM;AACnG,UAAM,mBAAmB,KAAK,iBAAiB;AAAA,MAC7C,SAAS;AAAA,IACX,CAAC;AACD,qBAAiB,IAAI,QAAM;AACzB,SAAG,aAAa,cAAc,GAAG;AACjC,SAAG,iBAAiB,uBAAuB,KAAK,mBAAmB;AAAA,IACrE,CAAC;AAAA,EACH;AAAA,EACA,oBAAoB,GAAG;AACrB,UAAM,WAAW,SAAS,iBAAiB,eAAe;AAC1D,UAAM,uBAAuB,MAAM,KAAK,QAAQ,EAAE,KAAK,UAAQ;AAC7D,UAAI,IAAI;AACR,aAAO,KAAK,cAAc,MAAM,KAAK,KAAK,gBAAgB,QAAQ,OAAO,SAAS,SAAS,GAAG,cAAc,YAAY,OAAO,QAAQ,OAAO,SAAS,SAAS,GAAG,QAAQ,EAAE;AAAA,IAC/K,CAAC;AACD,QAAI,sBAAsB;AACxB,2BAAqB,WAAW;AAAA,IAClC;AAAA,EACF;AAAA,EACA,SAAS;AACP,WAAO,EAAE,MAAM;AAAA,MACb,MAAM;AAAA,MACN,OAAO;AAAA,IACT,GAAG,EAAE,OAAO;AAAA,MACV,KAAK,QAAM,KAAK,gBAAgB;AAAA,IAClC,GAAG,EAAE,QAAQ;AAAA,MACX,cAAc,KAAK;AAAA,IACrB,CAAC,CAAC,CAAC;AAAA,EACL;AAAA,EACA,IAAI,KAAK;AACP,WAAO,WAAW,IAAI;AAAA,EACxB;AACF;AACA,QAAQ,QAAQ;",
  "names": []
}
