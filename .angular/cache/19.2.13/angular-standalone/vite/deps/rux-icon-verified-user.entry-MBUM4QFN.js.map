{
  "version": 3,
  "sources": ["../../../../../../node_modules/@astrouxds/astro-web-components/dist/esm/rux-icon-verified-user.entry.js"],
  "sourcesContent": ["import { r as registerInstance, h } from './index-416188d1.js';\nconst svgIcon = '<svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.19 4.47L11.19 1.36C11.7 1.13 12.3 1.13 12.81 1.36L19.81 4.47C20.53 4.79 21 5.51 21 6.3V11C21 16.55 17.16 21.74 12 23C6.84 21.74 3 16.55 3 11V6.3C3 5.51 3.47 4.79 4.19 4.47ZM6.7 13.7L9.29 16.29C9.68 16.68 10.32 16.68 10.7 16.29L17.29 9.7C17.68 9.31 17.68 8.68 17.29 8.29C16.9 7.9 16.27 7.9 15.88 8.29L10 14.17L8.11 12.29C7.72 11.9 7.09 11.9 6.7 12.29C6.31 12.68 6.31 13.31 6.7 13.7Z\" fill=\"currentColor\"/></svg>';\nconst RuxIconVerifiedUser = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.size = 'auto';\n  }\n  get iconSize() {\n    const sizes = {\n      'extra-small': '1rem',\n      small: '2rem',\n      normal: '3rem',\n      large: '4rem'\n    };\n    if (sizes[this.size]) {\n      return sizes[this.size];\n    } else {\n      return this.size;\n    }\n  }\n  render() {\n    const style = {\n      height: this.iconSize,\n      width: this.iconSize\n    };\n    return h(\"div\", {\n      style: style,\n      innerHTML: svgIcon\n    });\n  }\n};\nexport { RuxIconVerifiedUser as rux_icon_verified_user };"],
  "mappings": ";;;;;;;AACA,IAAM,UAAU;AAChB,IAAM,sBAAsB,MAAM;AAAA,EAChC,YAAY,SAAS;AACnB,qBAAiB,MAAM,OAAO;AAC9B,SAAK,OAAO;AAAA,EACd;AAAA,EACA,IAAI,WAAW;AACb,UAAM,QAAQ;AAAA,MACZ,eAAe;AAAA,MACf,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AACA,QAAI,MAAM,KAAK,IAAI,GAAG;AACpB,aAAO,MAAM,KAAK,IAAI;AAAA,IACxB,OAAO;AACL,aAAO,KAAK;AAAA,IACd;AAAA,EACF;AAAA,EACA,SAAS;AACP,UAAM,QAAQ;AAAA,MACZ,QAAQ,KAAK;AAAA,MACb,OAAO,KAAK;AAAA,IACd;AACA,WAAO,EAAE,OAAO;AAAA,MACd;AAAA,MACA,WAAW;AAAA,IACb,CAAC;AAAA,EACH;AACF;",
  "names": []
}
