{
  "version": 3,
  "sources": ["../../../../../../node_modules/@astrouxds/astro-web-components/dist/esm/rux-icon-mic.entry.js"],
  "sourcesContent": ["import { r as registerInstance, h } from './index-416188d1.js';\nconst svgIcon = '<svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15 11C15 12.66 13.66 14 12 14C10.34 14 8.99999 12.66 8.99999 11V5C8.99999 3.34 10.34 2 12 2C13.66 2 15 3.34 15 5V11ZM16.93 11.85C17.01 11.36 17.42 11 17.91 11C18.52 11 19.01 11.54 18.91 12.14C18.42 15.14 16.02 17.49 13 17.92V20C13 20.55 12.55 21 12 21C11.45 21 11 20.55 11 20V17.92C7.97999 17.49 5.57999 15.14 5.08999 12.14C4.99999 11.54 5.47999 11 6.08999 11C6.57999 11 6.98999 11.36 7.06999 11.85C7.47999 14.2 9.52999 16 12 16C14.47 16 16.52 14.2 16.93 11.85Z\" fill=\"currentColor\"/></svg>';\nconst RuxIconMic = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.size = 'auto';\n  }\n  get iconSize() {\n    const sizes = {\n      'extra-small': '1rem',\n      small: '2rem',\n      normal: '3rem',\n      large: '4rem'\n    };\n    if (sizes[this.size]) {\n      return sizes[this.size];\n    } else {\n      return this.size;\n    }\n  }\n  render() {\n    const style = {\n      height: this.iconSize,\n      width: this.iconSize\n    };\n    return h(\"div\", {\n      style: style,\n      innerHTML: svgIcon\n    });\n  }\n};\nexport { RuxIconMic as rux_icon_mic };"],
  "mappings": ";;;;;;;AACA,IAAM,UAAU;AAChB,IAAM,aAAa,MAAM;AAAA,EACvB,YAAY,SAAS;AACnB,qBAAiB,MAAM,OAAO;AAC9B,SAAK,OAAO;AAAA,EACd;AAAA,EACA,IAAI,WAAW;AACb,UAAM,QAAQ;AAAA,MACZ,eAAe;AAAA,MACf,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AACA,QAAI,MAAM,KAAK,IAAI,GAAG;AACpB,aAAO,MAAM,KAAK,IAAI;AAAA,IACxB,OAAO;AACL,aAAO,KAAK;AAAA,IACd;AAAA,EACF;AAAA,EACA,SAAS;AACP,UAAM,QAAQ;AAAA,MACZ,QAAQ,KAAK;AAAA,MACb,OAAO,KAAK;AAAA,IACd;AACA,WAAO,EAAE,OAAO;AAAA,MACd;AAAA,MACA,WAAW;AAAA,IACb,CAAC;AAAA,EACH;AACF;",
  "names": []
}
