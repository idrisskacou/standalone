{
  "version": 3,
  "sources": ["../../../../../../node_modules/@astrouxds/astro-web-components/dist/esm/rux-accordion.entry.js"],
  "sourcesContent": ["import { r as registerInstance, h, H as Host, g as getElement } from './index-416188d1.js';\nconst ruxAccordionCss = \":host{display:block}:host([disabled]){cursor:not-allowed;opacity:var(--opacity-disabled, 40%)}:host([disabled]) ::slotted(*){pointer-events:none}\";\nconst RuxAccordion = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.disabled = false;\n    this.disallowMultiple = false;\n  }\n  updatedExpanded(event) {\n    //if rux-accordion has the attribute to disallow-multiple then make sure only one rux-accordion-item is open at a time\n    if (this.disallowMultiple === true) {\n      event.preventDefault();\n      const items = this.el.querySelectorAll('rux-accordion-item'); //get all rux-accordion-items\n      const isExpanded = this.el.hasAttribute('expanded'); // state of the item when accessed\n      items.forEach(item => {\n        item.removeAttribute('expanded');\n      });\n      //only add the expanded attribute if it was not there when clicked. Else, close the item.\n      !isExpanded && this.el.setAttribute('expanded', '');\n    }\n  }\n  render() {\n    return h(Host, {\n      tabindex: this.disabled ? '-1' : null\n    }, h(\"slot\", null));\n  }\n  get el() {\n    return getElement(this);\n  }\n};\nRuxAccordion.style = ruxAccordionCss;\nexport { RuxAccordion as rux_accordion };"],
  "mappings": ";;;;;;;;;AACA,IAAM,kBAAkB;AACxB,IAAM,eAAe,MAAM;AAAA,EACzB,YAAY,SAAS;AACnB,qBAAiB,MAAM,OAAO;AAC9B,SAAK,WAAW;AAChB,SAAK,mBAAmB;AAAA,EAC1B;AAAA,EACA,gBAAgB,OAAO;AAErB,QAAI,KAAK,qBAAqB,MAAM;AAClC,YAAM,eAAe;AACrB,YAAM,QAAQ,KAAK,GAAG,iBAAiB,oBAAoB;AAC3D,YAAM,aAAa,KAAK,GAAG,aAAa,UAAU;AAClD,YAAM,QAAQ,UAAQ;AACpB,aAAK,gBAAgB,UAAU;AAAA,MACjC,CAAC;AAED,OAAC,cAAc,KAAK,GAAG,aAAa,YAAY,EAAE;AAAA,IACpD;AAAA,EACF;AAAA,EACA,SAAS;AACP,WAAO,EAAE,MAAM;AAAA,MACb,UAAU,KAAK,WAAW,OAAO;AAAA,IACnC,GAAG,EAAE,QAAQ,IAAI,CAAC;AAAA,EACpB;AAAA,EACA,IAAI,KAAK;AACP,WAAO,WAAW,IAAI;AAAA,EACxB;AACF;AACA,aAAa,QAAQ;",
  "names": []
}
