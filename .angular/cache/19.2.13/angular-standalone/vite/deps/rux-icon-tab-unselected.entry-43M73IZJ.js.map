{
  "version": 3,
  "sources": ["../../../../../../node_modules/@astrouxds/astro-web-components/dist/esm/rux-icon-tab-unselected.entry.js"],
  "sourcesContent": ["import { r as registerInstance, h } from './index-416188d1.js';\nconst svgIcon = '<svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3 5H1C1 3.9 1.9 3 3 3V5ZM1 9H3V7H1V9ZM1 13H3V11H1V13ZM9 21H11V19H9V21ZM3 17H1V15H3V17ZM3 21V19H1C1 20.1 1.9 21 3 21ZM13 3H21C22.1 3 23 3.9 23 5V9H14C13.45 9 13 8.55 13 8V3ZM21 17H23V15H21V17ZM11 5H9V3H11V5ZM5 21H7V19H5V21ZM7 5H5V3H7V5ZM21 21C22.1 21 23 20.1 23 19H21V21ZM23 13H21V11H23V13ZM15 21V19H13V21H15ZM19 21H17V19H19V21Z\" fill=\"currentColor\"/></svg>';\nconst RuxIconTabUnselected = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.size = 'auto';\n  }\n  get iconSize() {\n    const sizes = {\n      'extra-small': '1rem',\n      small: '2rem',\n      normal: '3rem',\n      large: '4rem'\n    };\n    if (sizes[this.size]) {\n      return sizes[this.size];\n    } else {\n      return this.size;\n    }\n  }\n  render() {\n    const style = {\n      height: this.iconSize,\n      width: this.iconSize\n    };\n    return h(\"div\", {\n      style: style,\n      innerHTML: svgIcon\n    });\n  }\n};\nexport { RuxIconTabUnselected as rux_icon_tab_unselected };"],
  "mappings": ";;;;;;;AACA,IAAM,UAAU;AAChB,IAAM,uBAAuB,MAAM;AAAA,EACjC,YAAY,SAAS;AACnB,qBAAiB,MAAM,OAAO;AAC9B,SAAK,OAAO;AAAA,EACd;AAAA,EACA,IAAI,WAAW;AACb,UAAM,QAAQ;AAAA,MACZ,eAAe;AAAA,MACf,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AACA,QAAI,MAAM,KAAK,IAAI,GAAG;AACpB,aAAO,MAAM,KAAK,IAAI;AAAA,IACxB,OAAO;AACL,aAAO,KAAK;AAAA,IACd;AAAA,EACF;AAAA,EACA,SAAS;AACP,UAAM,QAAQ;AAAA,MACZ,QAAQ,KAAK;AAAA,MACb,OAAO,KAAK;AAAA,IACd;AACA,WAAO,EAAE,OAAO;AAAA,MACd;AAAA,MACA,WAAW;AAAA,IACb,CAAC;AAAA,EACH;AACF;",
  "names": []
}
