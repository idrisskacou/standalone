{
  "version": 3,
  "sources": ["../../../../../../node_modules/@astrouxds/astro-web-components/dist/esm/rux-icon-hourglass-empty.entry.js"],
  "sourcesContent": ["import { r as registerInstance, h } from './index-416188d1.js';\nconst svgIcon = '<svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8 2C6.9 2 6 2.9 6 4V7.17C6 7.7 6.21 8.21 6.59 8.59L10 12L6.58 15.42C6.21 15.8 6 16.31 6 16.84V20C6 21.1 6.9 22 8 22H16C17.1 22 18 21.1 18 20V16.84C18 16.31 17.79 15.8 17.42 15.43L14 12L17.41 8.6C17.79 8.22 18 7.71 18 7.18V4C18 2.9 17.1 2 16 2H8ZM16 16.5V19C16 19.55 15.55 20 15 20H9C8.45 20 8 19.55 8 19V16.5L12 12.5L16 16.5ZM8 5V7.5L12 11.5L16 7.5V5C16 4.45 15.55 4 15 4H9C8.45 4 8 4.45 8 5Z\" fill=\"currentColor\"/></svg>';\nconst RuxIconHourglassEmpty = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.size = 'auto';\n  }\n  get iconSize() {\n    const sizes = {\n      'extra-small': '1rem',\n      small: '2rem',\n      normal: '3rem',\n      large: '4rem'\n    };\n    if (sizes[this.size]) {\n      return sizes[this.size];\n    } else {\n      return this.size;\n    }\n  }\n  render() {\n    const style = {\n      height: this.iconSize,\n      width: this.iconSize\n    };\n    return h(\"div\", {\n      style: style,\n      innerHTML: svgIcon\n    });\n  }\n};\nexport { RuxIconHourglassEmpty as rux_icon_hourglass_empty };"],
  "mappings": ";;;;;;;AACA,IAAM,UAAU;AAChB,IAAM,wBAAwB,MAAM;AAAA,EAClC,YAAY,SAAS;AACnB,qBAAiB,MAAM,OAAO;AAC9B,SAAK,OAAO;AAAA,EACd;AAAA,EACA,IAAI,WAAW;AACb,UAAM,QAAQ;AAAA,MACZ,eAAe;AAAA,MACf,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AACA,QAAI,MAAM,KAAK,IAAI,GAAG;AACpB,aAAO,MAAM,KAAK,IAAI;AAAA,IACxB,OAAO;AACL,aAAO,KAAK;AAAA,IACd;AAAA,EACF;AAAA,EACA,SAAS;AACP,UAAM,QAAQ;AAAA,MACZ,QAAQ,KAAK;AAAA,MACb,OAAO,KAAK;AAAA,IACd;AACA,WAAO,EAAE,OAAO;AAAA,MACd;AAAA,MACA,WAAW;AAAA,IACb,CAAC;AAAA,EACH;AACF;",
  "names": []
}
