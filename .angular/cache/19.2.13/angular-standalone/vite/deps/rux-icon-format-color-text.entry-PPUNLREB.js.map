{
  "version": 3,
  "sources": ["../../../../../../node_modules/@astrouxds/astro-web-components/dist/esm/rux-icon-format-color-text.entry.js"],
  "sourcesContent": ["import { r as registerInstance, h } from './index-416188d1.js';\nconst svgIcon = '<svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.63 3.93L6.06 15.58C5.79 16.26 6.29 17 7.03 17C7.46 17 7.85 16.73 8.01 16.32L8.87 14H15.12L15.99 16.32C16.14 16.73 16.53 17 16.97 17C17.7 17 18.21 16.26 17.94 15.58L13.37 3.93C13.14 3.37 12.6 3 12 3C11.4 3 10.85 3.37 10.63 3.93ZM9.62 12L12 5.67L14.38 12H9.62ZM24 22C24 20.9 23.1 20 22 20H2C0.9 20 0 20.9 0 22C0 23.1 0.9 24 2 24H22C23.1 24 24 23.1 24 22Z\" fill=\"currentColor\"/></svg>';\nconst RuxIconFormatColorText = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.size = 'auto';\n  }\n  get iconSize() {\n    const sizes = {\n      'extra-small': '1rem',\n      small: '2rem',\n      normal: '3rem',\n      large: '4rem'\n    };\n    if (sizes[this.size]) {\n      return sizes[this.size];\n    } else {\n      return this.size;\n    }\n  }\n  render() {\n    const style = {\n      height: this.iconSize,\n      width: this.iconSize\n    };\n    return h(\"div\", {\n      style: style,\n      innerHTML: svgIcon\n    });\n  }\n};\nexport { RuxIconFormatColorText as rux_icon_format_color_text };"],
  "mappings": ";;;;;;;AACA,IAAM,UAAU;AAChB,IAAM,yBAAyB,MAAM;AAAA,EACnC,YAAY,SAAS;AACnB,qBAAiB,MAAM,OAAO;AAC9B,SAAK,OAAO;AAAA,EACd;AAAA,EACA,IAAI,WAAW;AACb,UAAM,QAAQ;AAAA,MACZ,eAAe;AAAA,MACf,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AACA,QAAI,MAAM,KAAK,IAAI,GAAG;AACpB,aAAO,MAAM,KAAK,IAAI;AAAA,IACxB,OAAO;AACL,aAAO,KAAK;AAAA,IACd;AAAA,EACF;AAAA,EACA,SAAS;AACP,UAAM,QAAQ;AAAA,MACZ,QAAQ,KAAK;AAAA,MACb,OAAO,KAAK;AAAA,IACd;AACA,WAAO,EAAE,OAAO;AAAA,MACd;AAAA,MACA,WAAW;AAAA,IACb,CAAC;AAAA,EACH;AACF;",
  "names": []
}
