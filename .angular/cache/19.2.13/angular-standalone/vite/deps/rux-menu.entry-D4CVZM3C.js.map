{
  "version": 3,
  "sources": ["../../../../../../node_modules/@astrouxds/astro-web-components/dist/esm/rux-menu.entry.js"],
  "sourcesContent": ["import { r as registerInstance, c as createEvent, h, H as Host, g as getElement } from './index-416188d1.js';\nconst ruxMenuCss = \":host{display:block}\";\nconst RuxMenu = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ruxMenuSelected = createEvent(this, \"ruxmenuselected\", 7);\n  }\n  connectedCallback() {\n    this.el.addEventListener('click', e => {\n      this._handleSelected(e.target);\n    });\n  }\n  _handleSelected(item) {\n    //prevent code from running if the clicked element was disabled\n    if (item.disabled) return;\n    const menuItems = Array.from(this.el.querySelectorAll('rux-menu-item'));\n    menuItems.forEach(el => {\n      el.selected = false;\n      if (el === item && !el.disabled) {\n        item.selected = true;\n        this.ruxMenuSelected.emit(item);\n      }\n    });\n  }\n  render() {\n    return h(Host, null, h(\"div\", {\n      class: \"rux-menu\"\n    }, h(\"slot\", null)));\n  }\n  get el() {\n    return getElement(this);\n  }\n};\nRuxMenu.style = ruxMenuCss;\nexport { RuxMenu as rux_menu };"],
  "mappings": ";;;;;;;;;;AACA,IAAM,aAAa;AACnB,IAAM,UAAU,MAAM;AAAA,EACpB,YAAY,SAAS;AACnB,qBAAiB,MAAM,OAAO;AAC9B,SAAK,kBAAkB,YAAY,MAAM,mBAAmB,CAAC;AAAA,EAC/D;AAAA,EACA,oBAAoB;AAClB,SAAK,GAAG,iBAAiB,SAAS,OAAK;AACrC,WAAK,gBAAgB,EAAE,MAAM;AAAA,IAC/B,CAAC;AAAA,EACH;AAAA,EACA,gBAAgB,MAAM;AAEpB,QAAI,KAAK,SAAU;AACnB,UAAM,YAAY,MAAM,KAAK,KAAK,GAAG,iBAAiB,eAAe,CAAC;AACtE,cAAU,QAAQ,QAAM;AACtB,SAAG,WAAW;AACd,UAAI,OAAO,QAAQ,CAAC,GAAG,UAAU;AAC/B,aAAK,WAAW;AAChB,aAAK,gBAAgB,KAAK,IAAI;AAAA,MAChC;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,SAAS;AACP,WAAO,EAAE,MAAM,MAAM,EAAE,OAAO;AAAA,MAC5B,OAAO;AAAA,IACT,GAAG,EAAE,QAAQ,IAAI,CAAC,CAAC;AAAA,EACrB;AAAA,EACA,IAAI,KAAK;AACP,WAAO,WAAW,IAAI;AAAA,EACxB;AACF;AACA,QAAQ,QAAQ;",
  "names": []
}
